# user is set via ~/.config/bash/.exports
# there we export GIT_AUTHOR_NAME and GIT_AUTHOR_EMAIL
# and GIT_COMMITTER_NAME and GIT_COMMITTER_EMAIL

[alias]
	# View the SHA, description, and history graph of the latest 100 commits
	l = log --pretty=oneline --graph -n 100

	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

	# View the current working tree status using the short format
	s = status -s

	# Short status output (output like svn st)
	st = status -sb

	# Diff
	d = diff --patch-with-stat

	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"

	# Clone a repository including all submodules
	c = clone --recursive

	# Commit all changes
	ca = !git add -A && git commit -av

	# SVN bad habits die hard
	# ci = git commit

	# Switch to a branch, creating it if necessary
	go = checkout -B

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

	# Undo a `git push`
	undopush = push -f origin HEAD^:master

	# Stash, pull --rebase, Unstash
	sup = !git stash && git pull --rebase && git pop

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	editor = vim

	excludesfile = ~/dotfiles/git/.gitignore
	attributesfile = ~/dotfiles/git/.gitattributes

	# Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,indent-with-non-tab,trailing-space

	quotepath = false

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[github]
    user = schmkr

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
	remote = origin
	merge = refs/heads/master
[push]
	default = current
[rerere]
	enabled = true
